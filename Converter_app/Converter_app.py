# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Converter.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets



class Ui_Converter(object):
    def decimal_to_binary(self):
        try:
            val = int(self.lineEdit.text())
            nums = []
            while True:          
                if val == 1:
                    nums.append(1)
                    break
                if val % 2 == 0:
                    nums.append(0)
                    val = val // 2
                    continue 
                if val % 2 == 1:
                    nums.append(1)
                    val = val // 2
                    continue

            nums.reverse()        
            result = str(nums)               
            result = result.replace(", ", "")  
            result = result.replace("[", "")
            result = result.replace("]", "")
            self.lineEdit_2.setText(result)
        except:
            self.lineEdit_2.setText('ERROR')

    def binary_to_decimal(self):
        try:
            val = int(self.lineEdit.text())
            val = str(val)[::-1]
            if ('2' in val) or ('3' in val) or ('4' in val) or ('5' in val) or ('6' in val) or ('7' in val) or ('8' in val) or ('9' in val):
                self.lineEdit_2.setText('Это не двоичное число') 
                return
            x = 0
            result = 0
            for i in val:
                result += int(i) * (2**x)
                x+=1
            self.lineEdit_2.setText(str(result))
        except:
            self.lineEdit_2.setText('ERROR')

    def decimal_to_octal(self):
        try:
            val = int(self.lineEdit.text())
            nums = []
            while True:           
                if val < 8:
                    nums.append(val)
                    break
                nums.append(val % 8)
                val = val // 8

            nums.reverse()        
            result = str(nums)               
            result = result.replace(", ", "")  
            result = result.replace("[", "")
            result = result.replace("]", "")
            self.lineEdit_2.setText(result)
        except:
            self.lineEdit_2.setText('ERROR')

    def octal_to_decimal(self):
        try:
            val = int(self.lineEdit.text())
            val = str(val)[::-1]
            x = 0
            result = 0
            for i in val:
                result += int(i) * (8**x)
                x+=1
            self.lineEdit_2.setText(str(result))
        except:
            self.lineEdit_2.setText('ERROR')

    def decimal_to_hexadecimal(self):
        try:
            val = int(self.lineEdit.text())
            def number_to_letter(number):
                letter = ''
                if number == 10:
                    letter = 'A'
                elif number == 11:
                    letter = 'B'
                elif number == 12:
                    letter = 'C'
                elif number == 13:
                    letter = 'D'
                elif number == 14:
                    letter = 'E'
                elif number == 15:
                    letter = 'F'
                return letter
            
            nums = []
            while True:           
                if val < 16:
                    if val >= 10:
                        nums.append(number_to_letter(val))
                    else:
                        nums.append(val)
                    break
                if (val % 16) >= 10:
                    nums.append(number_to_letter(val % 16))
                else:
                    nums.append(val % 16)
                val = val // 16

            nums.reverse()        
            result = str(nums)               
            result = result.replace(", ", "")  
            result = result.replace("[", "")
            result = result.replace("]", "")
            result = result.replace("'", "")
            self.lineEdit_2.setText(result)
        except:
            self.lineEdit_2.setText('ERROR')

    def hexadecimal_to_decimal(self):
        try:
            val = self.lineEdit.text()
            def letter_to_number(letter):
                if letter == 'A':
                    number = 10
                elif letter == 'B':
                    number = 11
                elif letter == 'C':
                    number = 12
                elif letter == 'D':
                    number = 13
                elif letter == 'E':
                    number = 14
                elif letter == 'F':
                    number = 15
                return number
            
            val = str(val)[::-1]
            x = 0
            result = 0
            for i in val:
                if any(c.isalpha() for c in i):
                    result += letter_to_number(i) * (16**x)
                else:
                    result += int(i) * (16**x)
                x+=1
            self.lineEdit_2.setText(str(result))
        except:
            self.lineEdit_2.setText('ERROR')

    def setupUi(self, Converter):
        Converter.setObjectName("Converter")
        Converter.resize(439, 449)
        self.centralwidget = QtWidgets.QWidget(Converter)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 261, 31))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 80, 301, 20))
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(330, 80, 61, 21))
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(20, 280, 301, 21))
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(50, 170, 81, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(50, 140, 81, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(140, 140, 81, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 260, 61, 16))
        self.label_2.setObjectName("label_2")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(140, 170, 81, 23))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(50, 200, 81, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(140, 200, 81, 23))
        self.pushButton_7.setObjectName("pushButton_7")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 60, 81, 16))
        self.label_3.setObjectName("label_3")
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setGeometry(QtCore.QRect(330, 280, 81, 21))
        self.pushButton_8.setObjectName("pushButton_8")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 375, 241, 21))
        self.label_4.setObjectName("label_4")
        Converter.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Converter)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 439, 21))
        self.menubar.setObjectName("menubar")
        Converter.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Converter)
        self.statusbar.setObjectName("statusbar")
        Converter.setStatusBar(self.statusbar)

        self.retranslateUi(Converter)
        self.pushButton.clicked.connect(self.lineEdit.clear) # type: ignore
        self.pushButton.clicked.connect(self.lineEdit_2.clear) # type: ignore
        self.pushButton_8.clicked.connect(self.lineEdit_2.selectAll)
        self.pushButton_8.clicked.connect(self.lineEdit_2.copy) # type: ignore
        self.pushButton_3.clicked.connect(self.decimal_to_binary)
        self.pushButton_2.clicked.connect(self.decimal_to_octal)
        self.pushButton_6.clicked.connect(self.decimal_to_hexadecimal)
        self.pushButton_4.clicked.connect(self.binary_to_decimal)
        self.pushButton_5.clicked.connect(self.octal_to_decimal)
        self.pushButton_7.clicked.connect(self.hexadecimal_to_decimal)
        QtCore.QMetaObject.connectSlotsByName(Converter)

    def retranslateUi(self, Converter):
        _translate = QtCore.QCoreApplication.translate
        Converter.setWindowTitle(_translate("Converter", "Converter"))
        self.label.setText(_translate("Converter", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600; font-style:italic;\">Конвертор систем счистления</span></p></body></html>"))
        self.pushButton.setText(_translate("Converter", "Очистить"))
        self.pushButton_2.setText(_translate("Converter", "10 -> 8"))
        self.pushButton_3.setText(_translate("Converter", "10 -> 2"))
        self.pushButton_4.setText(_translate("Converter", "2 -> 10"))
        self.label_2.setText(_translate("Converter", "Результат"))
        self.pushButton_5.setText(_translate("Converter", "8 -> 10"))
        self.pushButton_6.setText(_translate("Converter", "10 -> 16"))
        self.pushButton_7.setText(_translate("Converter", "16 -> 10"))
        self.label_3.setText(_translate("Converter", "Введите число"))
        self.pushButton_8.setText(_translate("Converter", "Копировать"))
        self.label_4.setText(_translate("Converter", "by Worm787898 https://github.com/Worm787898"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Converter = QtWidgets.QMainWindow()
    ui = Ui_Converter()
    ui.setupUi(Converter)
    Converter.show()
    sys.exit(app.exec_())


    